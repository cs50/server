##########################################################################
#  Passenger Standalone is built on the same technology that powers
#  Passenger for Nginx, so any configuration option supported by Passenger
#  for Nginx can be applied to Passenger Standalone as well. You can do
#  this by direct editing the Nginx configuration template that is used by
#  Passenger Standalone.
#
#  This file is the original template. DO NOT EDIT THIS FILE DIRECTLY.
#  Instead, make a copy of this file and pass the `--nginx-config-template`
#  parameter to Passenger Standalone.
#
#  Learn more about using the Nginx configuration template at:
#  https://www.phusionpassenger.com/library/config/standalone/intro.html#nginx-configuration-template
#
#  *** NOTE ***
#  If you customize the template file, make sure you keep an eye on the
#  original template file and merge any changes. New Phusion Passenger
#  features may require changes to the template file.
##############################################################

<%= include_passenger_internal_template('global.erb') %>

worker_processes 1;
events {
    worker_connections 4096;
}

http {
    <%= include_passenger_internal_template('http.erb', 4) %>

    ### BEGIN your own configuration options ###
    # This is a good place to put your own config
    # options. Note that your options must not
    # conflict with the ones Passenger already sets.
    # Learn more at:
    # https://www.phusionpassenger.com/library/config/standalone/intro.html#nginx-configuration-template

    # determine real scheme
    # http://stackoverflow.com/a/21911864
    map $http_x_forwarded_proto $real_scheme {
        default $http_x_forwarded_proto;
        '' $scheme;
    }

    <% if !AppFinder.looks_like_app_directory? @apps[0][:root] %>
    # assume PHP if autodetection fails
    # https://www.phusionpassenger.com/library/indepth/nodejs/app_autodetection/standalone/#autodetection-algorithm
    passenger_ctl hook_before_watchdog_initialization /usr/local/bin/before_watchdog_initialization; # before Passenger starts
    passenger_ctl hook_after_watchdog_shutdown /usr/local/bin/after_watchdog_shutdown; # after Passenger stops
    <% end %>

    # suppress Passenger's version
    passenger_show_version_in_header off;

    # suppress Server header
    server_tokens off;

    <% if File.file?("#{@apps[0][:root]}/http.conf") %>
    # http context
    include <%= "#{@apps[0][:root]}/http.conf" %>;
    <% end %>

    ### END your own configuration options ###

    default_type application/octet-stream;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;
    client_max_body_size 1024m;
    access_log off;
    keepalive_timeout 60;
    underscores_in_headers on;
    gzip on;
    gzip_comp_level 3;
    gzip_min_length 150;
    gzip_proxied any;
    gzip_types text/plain text/css text/json text/javascript
        application/javascript application/x-javascript application/json
        application/rss+xml application/vnd.ms-fontobject application/x-font-ttf
        application/xml font/opentype image/svg+xml text/xml;

    <% if @app_finder.multi_mode? %>
        # Default server entry for mass deployment mode.
        server {
            <%= include_passenger_internal_template('mass_deployment_default_server.erb', 12) %>
        }
    <% end %>

    <% for app in @apps[0,1] %>
    server {
        <%= include_passenger_internal_template('server.erb', 8, true, binding) %>
        <%= include_passenger_internal_template('rails_asset_pipeline.erb', 8, false) %>

        ### BEGIN your own configuration options ###
        # This is a good place to put your own config
        # options. Note that your options must not
        # conflict with the ones Passenger already sets.
        # Learn more at:
        # https://www.phusionpassenger.com/library/config/standalone/intro.html#nginx-configuration-template

        # disable caching
        # https://stackoverflow.com/a/2068407/5156190
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";

        # redirect directory to directory/ (but with real scheme)
        if (-d $request_filename) {
            rewrite [^/]$ $real_scheme://$http_host$uri/ permanent;
        }

        # redirect to HTTPS if behind load balancer
        if ($http_x_forwarded_proto != 'https') {
            rewrite ^ https://$host$request_uri? permanent;
        }

        # omit port from rewrites in server.conf 
        <% if ENV["PASSENGER_ENVIRONMENT"] == "production" %>
        port_in_redirect off;
        <% end %>

        <% if !AppFinder.looks_like_app_directory? @apps[0][:root] %>
        # assume PHP if autodetection fails
        # https://www.phusionpassenger.com/library/indepth/nodejs/app_autodetection/standalone/#autodetection-algorithm
        index index.html index.php;
        location ~ \.php$ {
            fastcgi_param HTTP_X_FORWARDED_HOST $host;
            fastcgi_param HTTP_X_FORWARDED_SERVER $host;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SERVER_NAME $host;
            fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            include /usr/local/etc/fastcgi_params;
            try_files $uri =404;
        }
        <% end %>

        <% if File.file?("#{@apps[0][:root]}/server.conf") %>
        # server context
        include <%= "#{@apps[0][:root]}/server.conf" %>;
        <% end %>

        ### END your own configuration options ###
    }
    passenger_pre_start <%= listen_url(@apps[0]) %>;
    <% end %>

    <%= include_passenger_internal_template('footer.erb', 4) %>

    <% if ENV["PASSENGER_ENVIRONMENT"] == "production" %>
        port_in_redirect off;
    <% end %>
}
